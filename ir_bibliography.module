<?php

/**
 * 
 */

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function ir_bibliography_perm() {
  return array('create ir bibliography');
}


function ir_bibliography_menu() {
  $items = array();
  $items['ir_bibliography'] = array(
    'title' => t('IR Bibliography'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ir_bibliography_form'),
    'type' => MENU_CALLBACK,
    'access arguments' => array('create ir bibliography'),
  );
  return $items;
}


function ir_bibliography_form() {
    global $user;
    $query = "SELECT * FROM {ir_bibliography} WHERE uid ";// = $user->uid";
    $rs = db_query($query);
    $status = array();
    $pids = array();
        if ($rs) {
            while ($data = db_fetch_object($rs)) {
                $options[$data->id] = "";
                $form[$data->id]['pid'] = array('#value' => stripslashes($data->pid));
                $form[$data->id]['title'] = array('#value' => l(t("title link to object $data->id"),'http://google.ca'));
                $form[$data->id]['abstract'] = array('#value' => stripslashes("abstract"));
                $status[] = "";
                $pids[] = $data->pid;
            }
	}
        //drupal_set_message(print_r($pids));

	$form['citation_check'] = array(
            '#type' => 'checkboxes',
            '#options' => $options,
            '#default_value' => $status,
	);

        $form['citation_action'] = array(
            '#type' => 'select',
            '#title' => t('With Checked'),
            '#options' => array(NULL => "Select...", "Remove","Export"),
            '#required' => TRUE,
        ); //$form['citation_alter'] = array
        
        $form['citation_pids'] = array(
            '#type' => 'hidden',
            '#default_value' => $pids,
        ); //$form['citation_pids'] = array

	$form['submit'] = array(
            '#type' => 'submit',
            '#value' => t('Submit'),
	);

	$form['cancel'] = array(
            '#type' => 'markup',
            '#value' => l(t('Cancel'), 'ir_bibliography'),
	);

	$form['#redirect'] = 'ir_bibliography';

    return $form;
}

function ir_bibliography_form_submit($form_id, $form) {
    global $user;
    $form_values = $form['values'];
    $citation_check = $form_values['citation_check'];
    $citation_action = $form_values['citation_action'];


    $selected_citations = array();

    foreach($citation_check as $key => $value) {
        if ($value) {
            $selected_citations[] = "'$value'";
        }
    }

    if ($$citation_action == 0) {
        if($user->uid){
            $value_string = @implode(' OR pid = ', $selected_citations);
            $query = "DELETE FROM {ir_bibliography} WHERE (pid = $value_string) AND uid = $user->uid;";
            //drupal_set_message($query);
            db_query($query);
        }
        else {
        //code to delete saved citations from session (anonymous user)
        }
        drupal_set_message(t('Citation(s) removed successfully.'));
    }
    else {
        //code to export citations
    }



    // Insert new featured products
    if (count($selected_products)) {
        $query = "INSERT INTO {product_featured}(productid) VALUES $value_string";
        db_query($query);
    }

    drupal_set_message(t($citation_action));
}

function ir_bibliography_theme() {
	return array(
		'ir_bibliography_form' => array('arguments' => array('form' => NULL),),
	);
}

function theme_ir_bibliography_form($form) {
    $rows = array();
	
    foreach (element_children($form) as $key) {
        $row = array();
	if (isset($form[$key]['pid'])) {
            $row[] = array('data' => drupal_render($form[$key]['pid']));
            $row[] = array('data' => drupal_render($form[$key]['title']));
            $row[] = array('data' => drupal_render($form[$key]['abstract']));
            $status = drupal_render($form['citation_check'][$key]);
            $row[] = array('data' => $status, 'class' => 'checkbox');
           
            $rows[] = $row;
	}
    }
	// Individual table headers.
	$header = array();
	
	$header[] = t('PID');
	$header[] = t('Title');
	$header[] = t('Abstract');
        $header[] = array('data' => drupal_render($form['citation_action']), 'class' => 'checkbox');

	//$output = theme('table', $header, $rows);
        $output = theme_table($header, $rows, $attributes = NULL);
	$output .= drupal_render($form);
	return $output;
}
